*board.txt*  vim-board
                                                                             ~
                                                                             ~
      _    _ _____ _______     ______   _____  _______  ______ ______        ~
       \  /    |   |  |  | ___ |_____] |     | |_____| |_____/ |     \       ~
        \/   __|__ |  |  |     |_____] |_____| |     | |    \_ |_____/       ~
                                                                             ~
                                                                             ~
                      Azabiong <azabiongc@gmail.com>                         ~
                              License: MIT                                   ~
                                                                             ~
------------------------------------------------------------------------------
CONTENTS                                                            *Vim-Board*
                                                                    `ver 1.26.2`
                  Introduction          |Board-Introduction|
                  Configuration         |Board-Configuration|
                  Syntax                |Board-Syntax|
                  Menu                  |Board-Menu|
                  Links                 |Board-Links|
                  Customizing Colors    |Board-Customizing-Colors|
                  Commands              |Board-Commands|
                  Options               |Board-Options|
                  Log                   |Board-Log|


------------------------------------------------------------------------------
INTRODUCTION                                                *Board-Introduction*

This plugin introduces a file type `board` which allows you to easily write quick
notes and some shortcuts to files, directories and additional commands.

Feature ~

After setting up a custom `Key`, you can bring up the board using the following
key sequence:
>
    Key Enter
<
and to return:
>
    Key Esc
<
------------------------------------------------------------------------------
CONFIGURATION                                              *Board-Configuration*

The first item is to define the directory to store the `board` files. And next
is to assign a convenient key to bring up the `board` with `menu`. The plugin
default shortcut is a single quote and space if available.
>
    let BoardPath = '~/.config/boards'

    nmap '<Space> <Plug>(BoardMenu)
<
Now, save the changes and reload the plugin.

------------------------------------------------------------------------------
SYNTAX                                                            *Board-Syntax*

The plugin has an easy syntax and uses `.board` and `.bd` as file extensions.
You can display each item differently by using indentation and some leading
characters.

Section ~

The plugin uses sections to categorize content. Each section starts at the
beginning of a line, and can have different syntax depending on its type.
>
 Section
     Group
         Text
<
------------------------------------------------------------------------------
MENU                                                                *Board-Menu*

Pressing the `BoardMenu` key will bring up the most recently used `board` with
the auto-expanding `menu`.
>
    Board (-)prev(=)main(+)new  _
<
You can enter keys defined on the `board`, or switch between boards using the
following keys:

        <Enter>   edit current board
         <Esc>    return
           ;      return `(optional)`
        <Space>   scroll down
         <Down>   scroll down
          <Up>    scroll up
       <C-Space>  scroll up
           -      switch to previous board
           =      switch to main board
           +      add new board
           :      command-line mode
           /      search `(optional)`
           <      load links
           >      unload links

------------------------------------------------------------------------------
LINKS SECTION                                                     *Board-Links*

The plugin loads the shortcut links defined in this section. The following
example defines two links:
>
 :Links
        \py  ~/Languages/Python/
         pn  ~/Languages/Python/notes.py
<
Each link is a simple space-separated `key-value` pair, and uses the same
indentation as the `TEXT` field starting at column 6 or higher. Modified links
take effect immediately after saving.
                                                                     *Board-Key*
Key ~
    A key can consist of any combination of symbols, alphanumeric, and Unicode
    characters except those that start with some predefined characters.

   Available leading characters: ~

        ~!@$%^&*_()[]{}'`";,.\/? 0-9 a-z A-Z and Unicode characters

   Used in the menu and syntax: ~

        -  previous     #  comment
        =  main         |  command
        +  new
        <  load
        >  unload
        :  command

    The same key can be defined differently on each board.

  Long keys ~
    Long keys can be activated by typing only the unique prefix portion of the key.
    For example, if you define a link with a long key `xylophone`, and no other
    keys that start with `xy`, you can open the link with `xy` <Enter>.
                                                                    *Board-Path*
Path ~
    To easily define a link to a file, the plugin supports copying the current
    file's path to a register when the `menu` key is pressed (by default the `b`
    register).

    To paste the path stored in register 'b' in insert mode:
>
        CTRL-R b
<
  Tip ~
    When switching to another board stored in the |BoardPath| directory, you can
    omit the path and specify only the file name. For example:
>
        'a  another.board
<
    Switching boards using the defined keys will automatically load the links
    defined on the board.

Commands ~
    Additional commands can be added using the `|` bar character.

    For example, to browse files after changing the current working directory:
>
        \py  ~/Languages/Python/ | edit .
<
    After opening the file, to go to the line 128:
>
         pn  ~/Languages/Python/notes.py | 128
<
    More commands can be combined together:
>
        \d1  ~/Directory/ | NERDTreeCWD | wincmd p | edit README.md
<
Commands only ~
    You can also define just a list of commands without specifying a file or
    directory.

    For example, to define a command that copies frequently used commands or
    strings to the clipboard:
>
        s1  | let @+ = "copy this string to the clipboard"
<
    To define a substitution command:
>
        ss  | %s/Foo/Bar/gc
<
    To define a set of temporary key-maps:
>
        key | nn f0 <Cmd>echo 0<CR>
            | nn f9 <Cmd>echo 9<CR>
<
    To define some input from the shell tool to the scratchpad, `Board*`:
>
        sh1 | Board* | r! echo "This is the scratchpad on the Board"
        sh2 | Board* | r! curl -sI example.com
<
Multi-line commands ~
    Multi-line commands can be set using the leading bar `|` character.
>
        bar ~/directory/or_file
            | echo 'foo'
            | echo 'bar'
<
Link reference ~
    Links that have already been defined can be referenced using the '&' symbol.
    For example:
>
        _N  | NERDTreeCWD
        \d1 ~/Directory/ | &_N
<
Command-line mode ~
    When using the `|` bar character as a shell `pipe` or other meaning, you can
    switch to command-line mode input by adding a colon `:` after the bar.
>
        sh3 | Board* |: r! ls | wc
        sh4 | Board* |: r! cat ~/.ssh/known_hosts | awk '$1 ~ /[0-9]/ { print $1; exit}'
<
Stop command ~
    To stop a long list of commands while processing, press the `menu` key and
    input CTRL-C or an undefined key.

------------------------------------------------------------------------------
CUSTOMIZING COLORS                                    *Board-Customizing-Colors*

The plugin provides two default color sets that can be automatically loaded
depending on the current 'background' mode. You can use the native |hi| command
to customize colors starting with `Board`, and save them to the configuration
file or color scheme.
>
    BoardHelp  BoardSection  BoardGroup  BoardSpecial  BoardMarker  BoardLink
    BoardLed...
<
Example ~
>
    :hi BoardSpecial ctermfg=208 guifg=#ff8700
<
------------------------------------------------------------------------------
COMMANDS                                                        *Board-Commands*
                                                                         *Board*
Board ~
    Print the plugin version

Board* ~
    Open the scratchpad. This can be useful when combined with shell commands.
                                                                    *Board:menu*
Board menu ~
    Bring up the |Board-Menu|
                                                                   *Board:start*
Board start ~
    Start running another link.
>
        _C  | echo 'a list of commands'
         c  | if getcwd() =~ '/name' | Board start &_C | endif
<                                                                    *Board:stop*
Board stop ~
    Stop running the current link.
>
         0  | lua if 0 then vim.cmd('Board stop') end | echo 'no output'
<                                                                   *Board:speed*
Board speed ~
    Set the command processing rate in proportion to `Hz` while running the
    current link, and restores the default value after processing.

    Default: 1000
    Values:  1 ~ 1000  or  max

    Example: >
        run | echo ' Board:speed'
            | Board speed 1
            | echo ' Ready.' | echo ' Ready..' | echo ' Ready...'
            | echo ' Set.'   | echo ' Set..'
            | Board speed 8
            | echo ' Go!'
            | echo ' One'
            | echo ' Two'
            | echo ' Three'
            | echo ' Four'
            | echo ' Five'
            | echo ' Six'
            | echo ' Seven'
            | echo ' Eight'
            | echo ' Nine'
            | echo ' Done!'
<
------------------------------------------------------------------------------
OPTIONS                                                          *Board-Options*
                                                                     *BoardPath*
|BoardPath| specifies the directory where the `board` files will be stored.
    The plugin default path is:
>
        let BoardPath = '~/.config/boards'
<
    The plugin loads `_main_.board` when started.
                                                                 *BoardRegister*
|BoardRegister| specifies the register to copy the path to the current file when
    the `menu` key is pressed. The plugin uses the 'b' register by default.
>
        let BoardRegister = 'b'
<
    Values: 'a' ~ 'z'  or  '' `(disable)`

    For example, to paste the path stored in register 'b' in insert mode:
>
        CTRL-R b
<                                                               *BoardMenuExpand*
|BoardMenuExpand| option specifies the wait time in milliseconds before expanding
    the menu. You can try changing the values before saving.
>
        let BoardMenuExpand = 240
<
    Default: 240 `(ms)`
    Values:  180 ~ 480
                                                                   *BoardTermCd*
<Plug>(BoardTermCd) ~
    When using terminal window, synchronize current working directory with Vim
    by running `cd` command. To map key `Ctrl`+`\\` for terminal window:
>
      tmap <C-\><C-\>  <Plug>(BoardTermCd)
<
    lua
>
      vim.keymap.set('t', '<C-\\><C-\\>', '<Plug>(BoardTermCd)')
<
------------------------------------------------------------------------------
ISSUES                                                            *Board-Issues*

If you have any issues that need fixing, comments or new features you would
like to add, please feel free to open an issue.

------------------------------------------------------------------------------
LOG                                                                  *Board-Log*

1.26.2~
    Improve syntax, link loading
1.26~
    Improve syntax, scratchpad focusing, link menu
    Change default BoardPath
1.25~
    Support filetype plugin
    Improve optional menu keys, BoardTermCd
    Change menu keys - load(<), unload(>)
1.21~
    Add syntax type :brief
1.19~
    Support file extension *.bd
    Support optional search key '/'
1.18~
    Add 'unload links' menu key '>>'
    Improve buffer switching
1.17~
    Add indent function
1.16~
    Add default color set
1.15~
    Add syntax guide characters
    Add syntax type &*`
1.12~
    Support inline comment
    Add syntax type '?!'
1.11~
    Improve menu expansion, command splitting, buffer switching
    Support runtime 'BoardMenuExpand' option setting.
1.10~
    Add command |Board:menu| to bring up the menu from link
    Add option |BoardMenuExpand| to adjust menu expansion time
    Add syntax ':' type
1.09~
    Add auto-expand menu
    Improve buffer switching
1.08~
    Add 'auto hold' mode on `Menu <Enter>`
    Improve command line mode input
    Tune command interval
1.06~
    Add sync terminal current working directory
      :h  BoardTermCd
    Improve scratchpad logging, basic boards
1.03~
    Add command-line mode switch `|:` to use shell pipe
      c   | Board* |: r! ls | wc
1.02~
    Add command to open the scratchpad
      :Board*

------------------------------------------------------------------------------
Vim:ft=help:tw=80:ts=4:et:nowrap:norl
